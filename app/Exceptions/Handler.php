<?php

namespace App\Exceptions;

use Illuminate\Auth\Access\AuthorizationException;
use Illuminate\Auth\AuthenticationException;
use Illuminate\Database\Eloquent\ModelNotFoundException;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Illuminate\Validation\ValidationException as ValidationException;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array
     */
    protected $dontFlash = [
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }

    public function render($request, Throwable $e)
    {
        if ($e instanceof ModelNotFoundException) {
            return response()->json([
                'status' => 404,
                'error' => 'Objeto requisitado não existe.'
            ], 404);
        }
        if ($e instanceof NotFoundHttpException) {
            return response()->json([
                'status' => 404,
                'error' => 'a URI requisitada não existe, verifique a url e tente novamente.'
            ], 404);
        }
        if ($e instanceof AuthorizationException) {
            return response()->json([
                'status' => 403,
                'error' => 'Sem Permissoes para executar esta ação.'
            ], 403);
        }
        if ($e instanceof AuthenticationException) {
            return response()->json([
                'status' => 401,
                'error' => 'Não autenticado'
            ], 403);
        }
        if ($e instanceof ValidationException) {
            return response()->json([
                'status' => 422,
                'error' => $e->validator->getMessageBag()
            ], 422);
        }

        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }
}
